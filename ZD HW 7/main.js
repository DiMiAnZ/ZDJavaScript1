///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// - Створити функцію конструктор для об'єктів User з полями id, name, surname , email, phone
// створити пустий масив, наповнити його 10 об'єктами new User(....)

// let newUsers = [];
// function foo (id, name, surname, email, phone) {
//     this.id = id;
//     this.name = name;
//     this.surname = surname;
//     this.email = email;
//     this.phone = phone;
// }
// newUsers.push(new foo(1, 'Vasya', 'Wresd', 'dffgcgh@mail', '976543333'));
// newUsers.push(new foo(2, 'Anton', 'Puytr', 'fxhxfm@mail', '976543213'));
// newUsers.push(new foo(3, 'Olya', 'Qjgck', 'kfhd@mail', '976876543'));
// newUsers.push(new foo(4, 'Max', 'Kmhfd', 'dffgf@mail', '976212321'));
// newUsers.push(new foo(5, 'Oleg', 'Hyfdxf', 'gxerjhkg@mail', '976444444'));
// newUsers.push(new foo(6, 'Kostya', 'Jtdsfgjx', 'xcasdf@mail', '976545454'));
// newUsers.push(new foo(7, 'Sveta', 'Phmfxx', 'dgxgxhnb@mail', '976656543'));
// newUsers.push(new foo(8, 'Kolya', 'Okyfx', 'xdgszxt@mail', '976987687'));
// newUsers.push(new foo(9, 'Ivan', 'Rhfffhc', 'sfghfff@mail', '976765409'));
// newUsers.push(new foo(10, 'Semen', 'Tkghhgk', 'fdutdssz@mail', '976095431'));
// console.log(newUsers);

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// - Взяти масив з  User[] з попереднього завдання, та відфільтрувати , залишивши тільки об'єкти з парними id (filter)

// let filter = newUsers.filter(function (newUser){
//     return newUser.id%2===0;
// });
// console.log(filter);

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// - Взяти масив з  User[] з попереднього завдання, та відсортувати його по id. по зростанню (sort)

// let sort = newUsers.sort(function (a, b){
//     return b.id-a.id;
// });
// console.log(sort);

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// - створити класс для об'єктів Client з полями id, name, surname , email, phone, order (поле є масивом зі списком товарів)
// створити пустий масив, наповнити його 10 об'єктами Client
// - Взяти масив (Client [] з попереднього завдання).Відсортувати його по кількості товарів в полі order по зростанню. (sort)
//
//
// - Створити функцію конструктор яка дозволяє створювати об'єкти car, з властивостями модель, виробник, рік випуску, максимальна швидкість, об'єм двигуна. додати в об'єкт функції:
// -- drive () - яка виводить в консоль `їдемо зі швидкістю ${максимальна швидкість} на годину`
// -- info () - яка виводить всю інформацію про автомобіль в форматі `назва поля - значення поля`
// -- increaseMaxSpeed (newSpeed) - яка підвищує значення максимальної швидкості на значення newSpeed
// -- changeYear (newValue) - змінює рік випуску на значення newValue
// -- addDriver (driver) - приймає об'єкт який "водій" з довільним набором полів, і додає його в поточний об'єкт car
//
//
// - (Те саме, тільки через клас)
// Створити клас який дозволяє створювати об'єкти car, з властивостями модель, виробник, рік випуску, максимальна швидкість, об'єм двигуна. додати в об'єкт функції:
// -- drive () - яка виводить в консоль `їдемо зі швидкістю ${максимальна швидкість} на годину`
// -- info () - яка виводить всю інформацію про автомобіль в форматі `назва поля - значення поля`
// -- increaseMaxSpeed (newSpeed) - яка підвищує значення максимальної швидкості на значення newSpeed
// -- changeYear (newValue) - змінює рік випуску на значення newValue
// -- addDriver (driver) - приймає об'єкт який "водій" з довільним набором полів, і додає його в поточний об'єкт car
//
//
//
// -створити класс/функцію конструктор попелюшка з полями ім'я, вік, розмір ноги. Створити масив з 10 попелюшок.
// Сторити об'єкт класу "принц" за допомоги класу який має поля ім'я, вік, туфелька яку він знайшов.
//     За допомоги циклу знайти яка попелюшка повинна бути з принцом.
//    Додатково, знайти необхідну попелюшку за допомоги функції масиву find та відповідного колбеку